
package dcnode;

enum MsgDCNodeType
{
	MSG_REG_NAME	= 1;
	MSG_HEART_BEAT	= 2;
	MSG_RPC = 3;
    MSG_DATA = 4;
};

message MsgDCNodeRPC
{
	required	string	name = 1;
	required	uint64	cookie = 2;
	optional	int32	errcode	= 3;
	optional	bytes	request = 4;
	optional	bytes	response = 5;
};
enum MsgOption
{
	MSG_OPT_REQ = 1; //a request
	MSG_OPT_RSP = 2; //this is a response
	MSG_OPT_PUSH = 3; //push msg 
}
message MsgRegName
{
	optional	uint64			session = 1;//session id , alloc msgpid
	optional	int32			ret = 2; //apply result 0:ok
}
message MsgExt
{
	required	uint32			unixtime = 1;//send time
	optional	MsgOption		opt = 3;
}

message MsgDCNode
{
	required	string			src	= 1;
	optional	string			dst = 2;
    required    MsgDCNodeType   type = 3;
    optional    bytes           msg_data = 4;
	/////////////////////////////////////////////
	required	MsgExt			ext = 5;
	optional	MsgRegName		reg_name = 6;
	optional	MsgDCNodeRPC	rpc = 7;
};
